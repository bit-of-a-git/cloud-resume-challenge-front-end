name: Deploy to Production

on:
  push:
    branches:
      - main

env:
  aws-production-account: ${{ secrets.AWS_PRODUCTION_ACCOUNT }}
  aws-production-bucket: ${{ secrets.AWS_PRODUCTION_BUCKET }}

jobs:
  build:
    permissions:
      id-token: write    # Job to connect to Identity Token to receive the token
      contents: read     # Read access to the repository
    runs-on:
       - ubuntu-latest
       
    steps:
    - name : Check out Git Repository
      uses: actions/checkout@v3
      
    - name: Connecting GitHub Actions To AWS Using OIDC - Roles
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: eu-west-1
        role-to-assume: arn:aws:iam::${{ env.aws-production-account }}:role/github-actions-role
        role-session-name: github-actions-session
 
   # Terraform Operations
    - name : Terraform Setup
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
      
    - name: Terraform Init
      id: init
      run: terraform init -backend-config "bucket=${{ env.aws-production-bucket }}"

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
    
    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -refresh=false  -no-color -out out.plan
      continue-on-error: false
      
    - name: Terraform Apply
      id: apply
      run: |
        terraform apply --auto-approve
      continue-on-error: false

    - name: Invalidate CloudFront Cache
      run: |
        aws cloudfront create-invalidation --distribution-id $(terraform output -raw cloudfront_distribution_ID) --paths "/*"